name: Build OpenECOE One For All

on:
  workflow_dispatch:
    inputs:
      project:
        description: 'Nombre del proyecto que invoca el build'
        required: true
        default: 'api'
      branch:
        description: 'Nombre de la rama que invoca el build'
        required: true
        default: 'master'
      tags:
        description: 'Tags separados por comas'
        required: false
        default: 'v1.0.0'
permissions:
  contents: read

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # docker.repository as <account>/<repo>
  IMAGE_NAME: openecoe/one-for-all

jobs:
  create_one_for_all:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          #registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: | 
            ${{ env.IMAGE_NAME }}
          tags: |
            type=pep440,pattern={{version}},event=tag
            type=ref,event=branch

      - name: Set Tag Name
        id: set_tag
        shell: bash
        env:
          INPUT_TAGS: ${{ github.event.inputs.tags }}
          INPUT_BRANCH: ${{ github.event.inputs.branch }}
          INPUT_PROJECT: ${{ github.event.inputs.project }}
        run: |
          if [[ -n "$INPUT_TAGS" ]]; then
            TAG="$INPUT_TAGS"
          elif [[ "INPUT_BRANCH" == "master" ]]; then
            TAG="latest"
          else
            TAG="$INPUT_BRANCH"
          fi
          echo "tag=$INPUT_PROJECT-$TAG" >> $GITHUB_OUTPUT

      - name: Determine release tag based on GitHub event
        id: release_tag
        run: |
            if [[ "${{ github.event.inputs.branch }}" == "uat" ]]; then
              echo "tag=uat" >> $GITHUB_OUTPUT
            else
              echo "tag=latest" >> $GITHUB_OUTPUT
            fi

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: | 
            openecoe/one-for-all:${{ steps.release_tag.outputs.tag }}
            openecoe/one-for-all:${{ steps.set_tag.outputs.tag }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max